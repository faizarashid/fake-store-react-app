{"ast":null,"code":"var _jsxFileName = \"/Users/faizakhan/Projects/Repos/fake-store-react-app/src/components/Counter.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = WrappedComponent => {\n  var _s = $RefreshSig$();\n  function Counter(props) {\n    _s();\n    const [count, setCount] = useState(0);\n    function increment() {\n      setCount(count + 1);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        count: count,\n        increment: increment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }\n  _s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n  return Counter;\n};\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","Counter","WrappedComponent","props","count","setCount","increment"],"sources":["/Users/faizakhan/Projects/Repos/fake-store-react-app/src/components/Counter.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst Counter=(WrappedComponent)=>{\nfunction Counter(props) {\n    const [count, setCount]=useState(0)\n    function increment(){\n        setCount(count+1);\n    }\n    return(\n        <div>\n            <WrappedComponent count={count} increment={increment}/>\n        </div>\n    );\n} return Counter\n}\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,MAAMC,OAAO,GAAEC,gBAAgB,IAAG;EAAA;EAClC,SAASD,OAAO,CAACE,KAAK,EAAE;IAAA;IACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAACL,QAAQ,CAAC,CAAC,CAAC;IACnC,SAASM,SAAS,GAAE;MAChBD,QAAQ,CAACD,KAAK,GAAC,CAAC,CAAC;IACrB;IACA,oBACI;MAAA,uBACI,QAAC,gBAAgB;QAAC,KAAK,EAAEA,KAAM;QAAC,SAAS,EAAEE;MAAU;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACrD;EAEd;EAAC,GAVQL,OAAO;EAUd,OAAOA,OAAO;AAChB,CAAC;AAAA,KAZKA,OAAO;AAab,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}